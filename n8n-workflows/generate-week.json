{
  "name": "Generate Weekly Meal Plans",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "dayOfWeek",
              "expression": "sunday",
              "hour": 20,
              "minute": 0
            }
          ]
        }
      },
      "id": "cron-trigger",
      "name": "Weekly Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Generate dates for the next week (Monday to Sunday)\nconst today = new Date();\nconst daysUntilMonday = (8 - today.getDay()) % 7;\nconst nextMonday = new Date(today);\nnextMonday.setDate(today.getDate() + daysUntilMonday);\n\nconst weekDates = [];\nfor (let i = 0; i < 7; i++) {\n  const date = new Date(nextMonday);\n  date.setDate(nextMonday.getDate() + i);\n  weekDates.push({\n    date: date.toISOString().split('T')[0],\n    dayOfWeek: date.getDay(),\n    trainingDay: [1, 2, 4, 6].includes(date.getDay()) // Mon, Tue, Thu, Sat\n  });\n}\n\nreturn weekDates.map(date => ({ json: date }));"
      },
      "id": "generate-dates",
      "name": "Generate Week Dates",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "={{ $env.BASE_URL }}/api/plans/create",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.API_TOKEN }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "date",
              "value": "={{ $json.date }}"
            },
            {
              "name": "trainingDay",
              "value": "={{ $json.trainingDay }}"
            },
            {
              "name": "templateId",
              "value": "={{ $env.DEFAULT_TEMPLATE_ID }}"
            }
          ]
        },
        "options": {}
      },
      "id": "create-plan",
      "name": "Create Day Plan",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "check-success",
              "leftValue": "={{ $json.success }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-success",
      "name": "Check Success",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "url": "https://api.telegram.org/bot{{ $env.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "authentication": "genericCredentialType",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $env.TELEGRAM_CHAT_ID }}"
            },
            {
              "name": "text",
              "value": "✅ Plan creado para {{ $json.date }}\n🏋️ {{ $json.trainingDay ? 'Día de entrenamiento' : 'Día de descanso' }}\n🎯 Objetivo: {{ $json.adjustedGoals.kcal }} kcal"
            },
            {
              "name": "parse_mode",
              "value": "HTML"
            }
          ]
        },
        "options": {}
      },
      "id": "telegram-success",
      "name": "Telegram Success",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "url": "https://api.telegram.org/bot{{ $env.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "authentication": "genericCredentialType",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $env.TELEGRAM_CHAT_ID }}"
            },
            {
              "name": "text",
              "value": "❌ Error creando plan para {{ $json.date }}\nError: {{ $json.error }}"
            },
            {
              "name": "parse_mode",
              "value": "HTML"
            }
          ]
        },
        "options": {}
      },
      "id": "telegram-error",
      "name": "Telegram Error",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "jsCode": "// Create summary message\nconst successfulPlans = $input.all().filter(item => item.json.success).length;\nconst totalPlans = $input.all().length;\n\nconst summary = `📅 Semana generada automáticamente\n✅ ${successfulPlans}/${totalPlans} planes creados exitosamente\n\nPróxima generación: Domingo 20:00`;\n\nreturn [{ json: { summary } }];"
      },
      "id": "create-summary",
      "name": "Create Summary",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "url": "https://api.telegram.org/bot{{ $env.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "authentication": "genericCredentialType",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $env.TELEGRAM_CHAT_ID }}"
            },
            {
              "name": "text",
              "value": "={{ $json.summary }}"
            },
            {
              "name": "parse_mode",
              "value": "HTML"
            }
          ]
        },
        "options": {}
      },
      "id": "send-summary",
      "name": "Send Summary",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 300]
    }
  ],
  "connections": {
    "Weekly Trigger": {
      "main": [
        [
          {
            "node": "Generate Week Dates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Week Dates": {
      "main": [
        [
          {
            "node": "Create Day Plan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Day Plan": {
      "main": [
        [
          {
            "node": "Check Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Success": {
      "main": [
        [
          {
            "node": "Telegram Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Success": {
      "main": [
        [
          {
            "node": "Create Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Error": {
      "main": [
        [
          {
            "node": "Create Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Summary": {
      "main": [
        [
          {
            "node": "Send Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}
